
cv1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000138a  0000141e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000138a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000411  00800102  00800102  00001420  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001420  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001450  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00001490  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c26  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ada  00000000  00000000  00003236  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e61  00000000  00000000  00003d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f8  00000000  00000000  00004b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000067b  00000000  00000000  00004f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fe5  00000000  00000000  000055e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  000065cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__ctors_end>
       4:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
       8:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
       c:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      10:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      14:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      18:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      1c:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      20:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      24:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      28:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      2c:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      30:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      34:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      38:	0c 94 5f 08 	jmp	0x10be	; 0x10be <__vector_14>
      3c:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      40:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      44:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      48:	0c 94 23 08 	jmp	0x1046	; 0x1046 <__vector_18>
      4c:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      50:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      54:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      58:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      5c:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      60:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>
      64:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__bad_interrupt>

00000068 <__trampolines_end>:
	...
      70:	00 80       	ld	r0, Z
      72:	c0 e0       	ldi	r28, 0x00	; 0
      74:	f0 f0       	brcs	.+60     	; 0xb2 <__trampolines_end+0x4a>
      76:	f8 f8       	.word	0xf8f8	; ????
      78:	f8 fc       	.word	0xfcf8	; ????
      7a:	fc fc       	.word	0xfcfc	; ????
      7c:	fc fc       	.word	0xfcfc	; ????
      7e:	fc fc       	.word	0xfcfc	; ????
      80:	fc fc       	.word	0xfcfc	; ????
      82:	fc f8       	.word	0xf8fc	; ????
      84:	f8 f8       	.word	0xf8f8	; ????
      86:	f0 f0       	brcs	.+60     	; 0xc4 <__trampolines_end+0x5c>
      88:	e0 c0       	rjmp	.+448    	; 0x24a <__trampolines_end+0x1e2>
      8a:	80 00       	.word	0x0080	; ????
	...
      94:	00 00       	nop
      96:	00 e0       	ldi	r16, 0x00	; 0
      98:	f8 fe       	.word	0xfef8	; ????
      9a:	ff ff       	.word	0xffff	; ????
      9c:	ff ff       	.word	0xffff	; ????
      9e:	ff ff       	.word	0xffff	; ????
      a0:	ff 7f       	andi	r31, 0xFF	; 255
      a2:	1f 0f       	add	r17, r31
      a4:	0f 07       	cpc	r16, r31
      a6:	07 07       	cpc	r16, r23
      a8:	07 07       	cpc	r16, r23
      aa:	07 0f       	add	r16, r23
      ac:	0f 1f       	adc	r16, r31
      ae:	7f ff       	.word	0xff7f	; ????
      b0:	ff ff       	.word	0xffff	; ????
      b2:	ff ff       	.word	0xffff	; ????
      b4:	ff ff       	.word	0xffff	; ????
      b6:	fe f8       	.word	0xf8fe	; ????
      b8:	e0 00       	.word	0x00e0	; ????
      ba:	00 00       	nop
      bc:	00 00       	nop
      be:	00 00       	nop
      c0:	ff ff       	.word	0xffff	; ????
      c2:	ff ff       	.word	0xffff	; ????
      c4:	ff ff       	.word	0xffff	; ????
      c6:	ff ff       	.word	0xffff	; ????
      c8:	ff ff       	.word	0xffff	; ????
      ca:	1f 00       	.word	0x001f	; ????
	...
      d8:	80 8f       	std	Z+24, r24	; 0x18
      da:	ff ff       	.word	0xffff	; ????
      dc:	ff ff       	.word	0xffff	; ????
      de:	ff ff       	.word	0xffff	; ????
      e0:	ff ff       	.word	0xffff	; ????
      e2:	ff ff       	.word	0xffff	; ????
      e4:	80 00       	.word	0x0080	; ????
      e6:	00 00       	nop
      e8:	00 00       	nop
      ea:	ff ff       	.word	0xffff	; ????
      ec:	ff ff       	.word	0xffff	; ????
      ee:	ff ff       	.word	0xffff	; ????
      f0:	ff ff       	.word	0xffff	; ????
      f2:	ff ff       	.word	0xffff	; ????
      f4:	00 00       	nop
      f6:	00 00       	nop
      f8:	80 c0       	rjmp	.+256    	; 0x1fa <__trampolines_end+0x192>
      fa:	e0 e0       	ldi	r30, 0x00	; 0
      fc:	f0 f8       	bld	r15, 0
      fe:	fc fc       	.word	0xfcfc	; ????
     100:	fe ff       	.word	0xfffe	; ????
     102:	7f 3f       	cpi	r23, 0xFF	; 255
     104:	ff ff       	.word	0xffff	; ????
     106:	ff ff       	.word	0xffff	; ????
     108:	ff ff       	.word	0xffff	; ????
     10a:	ff ff       	.word	0xffff	; ????
     10c:	ff ff       	.word	0xffff	; ????
     10e:	ff 00       	.word	0x00ff	; ????
     110:	00 00       	nop
     112:	00 00       	nop
     114:	ff ff       	.word	0xffff	; ????
     116:	ff ff       	.word	0xffff	; ????
     118:	ff ff       	.word	0xffff	; ????
     11a:	ff ff       	.word	0xffff	; ????
     11c:	ff ff       	.word	0xffff	; ????
     11e:	fc fe       	.word	0xfefc	; ????
     120:	ff 7f       	andi	r31, 0xFF	; 255
     122:	3f 1f       	adc	r19, r31
     124:	1f 0f       	add	r17, r31
     126:	07 07       	cpc	r16, r23
     128:	03 01       	movw	r0, r6
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	ff ff       	.word	0xffff	; ????
     130:	ff ff       	.word	0xffff	; ????
     132:	ff ff       	.word	0xffff	; ????
     134:	ff ff       	.word	0xffff	; ????
     136:	ff ff       	.word	0xffff	; ????
     138:	ff 00       	.word	0x00ff	; ????
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	7f ff       	.word	0xff7f	; ????
     140:	ff ff       	.word	0xffff	; ????
     142:	ff ff       	.word	0xffff	; ????
     144:	ff ff       	.word	0xffff	; ????
     146:	ff ff       	.word	0xffff	; ????
     148:	fd 00       	.word	0x00fd	; ????
	...
     156:	00 f8       	bld	r0, 0
     158:	ff ff       	.word	0xffff	; ????
     15a:	ff ff       	.word	0xffff	; ????
     15c:	ff ff       	.word	0xffff	; ????
     15e:	ff ff       	.word	0xffff	; ????
     160:	ff 7f       	andi	r31, 0xFF	; 255
     162:	00 00       	nop
     164:	00 00       	nop
     166:	00 00       	nop
     168:	00 03       	mulsu	r16, r16
     16a:	0f 3f       	cpi	r16, 0xFF	; 255
     16c:	7f ff       	.word	0xff7f	; ????
     16e:	ff ff       	.word	0xffff	; ????
     170:	ff ff       	.word	0xffff	; ????
     172:	ff ff       	.word	0xffff	; ????
     174:	fc f8       	.word	0xf8fc	; ????
     176:	f8 f0       	brcs	.+62     	; 0x1b6 <__trampolines_end+0x14e>
     178:	f0 f0       	brcs	.+60     	; 0x1b6 <__trampolines_end+0x14e>
     17a:	f0 f0       	brcs	.+60     	; 0x1b8 <__trampolines_end+0x150>
     17c:	f0 f8       	bld	r15, 0
     17e:	f8 fc       	.word	0xfcf8	; ????
     180:	ff ff       	.word	0xffff	; ????
     182:	ff ff       	.word	0xffff	; ????
     184:	ff ff       	.word	0xffff	; ????
     186:	ff 7f       	andi	r31, 0xFF	; 255
     188:	3f 0f       	add	r19, r31
     18a:	03 00       	.word	0x0003	; ????
	...
     198:	01 03       	mulsu	r16, r17
     19a:	07 07       	cpc	r16, r23
     19c:	0f 0f       	add	r16, r31
     19e:	0f 1f       	adc	r16, r31
     1a0:	1f 1f       	adc	r17, r31
     1a2:	1f 1f       	adc	r17, r31
     1a4:	1f 1f       	adc	r17, r31
     1a6:	1f 1f       	adc	r17, r31
     1a8:	1f 0f       	add	r17, r31
     1aa:	0f 0f       	add	r16, r31
     1ac:	07 07       	cpc	r16, r23
     1ae:	03 01       	movw	r0, r6
	...
     1c8:	00 00       	nop
     1ca:	80 80       	ld	r8, Z
     1cc:	c0 c0       	rjmp	.+384    	; 0x34e <__trampolines_end+0x2e6>
     1ce:	c0 e0       	ldi	r28, 0x00	; 0
     1d0:	e0 e0       	ldi	r30, 0x00	; 0
     1d2:	f0 f0       	brcs	.+60     	; 0x210 <__trampolines_end+0x1a8>
     1d4:	f0 f8       	bld	r15, 0
	...
     1e6:	00 f0       	brcs	.+0      	; 0x1e8 <__trampolines_end+0x180>
     1e8:	f8 f8       	.word	0xf8f8	; ????
     1ea:	f8 fc       	.word	0xfcf8	; ????
     1ec:	fc fc       	.word	0xfcfc	; ????
     1ee:	fe fe       	.word	0xfefe	; ????
     1f0:	fe ff       	.word	0xfffe	; ????
     1f2:	ff ff       	.word	0xffff	; ????
     1f4:	ff ff       	.word	0xffff	; ????
     1f6:	ff ff       	.word	0xffff	; ????
     1f8:	ff ff       	.word	0xffff	; ????
     1fa:	ff ff       	.word	0xffff	; ????
     1fc:	ff ff       	.word	0xffff	; ????
     1fe:	ff ff       	.word	0xffff	; ????
	...
     210:	00 3f       	cpi	r16, 0xF0	; 240
     212:	1f 1f       	adc	r17, r31
     214:	0f 0f       	add	r16, r31
     216:	07 07       	cpc	r16, r23
     218:	07 03       	mulsu	r16, r23
     21a:	03 03       	mulsu	r16, r19
     21c:	01 01       	movw	r0, r2
     21e:	01 ff       	sbrs	r16, 1
     220:	ff ff       	.word	0xffff	; ????
     222:	ff ff       	.word	0xffff	; ????
     224:	ff ff       	.word	0xffff	; ????
     226:	ff ff       	.word	0xffff	; ????
     228:	ff ff       	.word	0xffff	; ????
	...
     246:	00 00       	nop
     248:	00 ff       	sbrs	r16, 0
     24a:	ff ff       	.word	0xffff	; ????
     24c:	ff ff       	.word	0xffff	; ????
     24e:	ff ff       	.word	0xffff	; ????
     250:	ff ff       	.word	0xffff	; ????
     252:	ff ff       	.word	0xffff	; ????
	...
     270:	00 00       	nop
     272:	00 ff       	sbrs	r16, 0
     274:	ff ff       	.word	0xffff	; ????
     276:	ff ff       	.word	0xffff	; ????
     278:	ff ff       	.word	0xffff	; ????
     27a:	ff ff       	.word	0xffff	; ????
     27c:	ff ff       	.word	0xffff	; ????
	...
     29a:	00 00       	nop
     29c:	00 ff       	sbrs	r16, 0
     29e:	ff ff       	.word	0xffff	; ????
     2a0:	ff ff       	.word	0xffff	; ????
     2a2:	ff ff       	.word	0xffff	; ????
     2a4:	ff ff       	.word	0xffff	; ????
     2a6:	ff ff       	.word	0xffff	; ????
	...
     2c4:	00 00       	nop
     2c6:	00 ff       	sbrs	r16, 0
     2c8:	ff ff       	.word	0xffff	; ????
     2ca:	ff ff       	.word	0xffff	; ????
     2cc:	ff ff       	.word	0xffff	; ????
     2ce:	ff ff       	.word	0xffff	; ????
     2d0:	ff ff       	.word	0xffff	; ????
	...
     2ee:	00 00       	nop
     2f0:	00 0f       	add	r16, r16
     2f2:	0f 0f       	add	r16, r31
     2f4:	0f 0f       	add	r16, r31
     2f6:	0f 0f       	add	r16, r31
     2f8:	0f 0f       	add	r16, r31
     2fa:	0f 0f       	add	r16, r31
	...
     30c:	00 00       	nop
     30e:	80 c0       	rjmp	.+256    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     310:	c0 e0       	ldi	r28, 0x00	; 0
     312:	f0 f0       	brcs	.+60     	; 0x350 <__trampolines_end+0x2e8>
     314:	f0 f8       	bld	r15, 0
     316:	f8 f8       	.word	0xf8f8	; ????
     318:	fc fc       	.word	0xfcfc	; ????
     31a:	fc fc       	.word	0xfcfc	; ????
     31c:	fc fc       	.word	0xfcfc	; ????
     31e:	fc fc       	.word	0xfcfc	; ????
     320:	fc fc       	.word	0xfcfc	; ????
     322:	f8 f8       	.word	0xf8f8	; ????
     324:	f8 f0       	brcs	.+62     	; 0x364 <__trampolines_end+0x2fc>
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	e0 c0       	rjmp	.+448    	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
     32a:	80 00       	.word	0x0080	; ????
     32c:	00 00       	nop
     32e:	00 00       	nop
     330:	00 00       	nop
     332:	00 80       	ld	r0, Z
     334:	e0 f8       	bld	r14, 0
     336:	fe ff       	.word	0xfffe	; ????
     338:	ff ff       	.word	0xffff	; ????
     33a:	ff ff       	.word	0xffff	; ????
     33c:	ff ff       	.word	0xffff	; ????
     33e:	7f 3f       	cpi	r23, 0xFF	; 255
     340:	1f 0f       	add	r17, r31
     342:	07 07       	cpc	r16, r23
     344:	07 07       	cpc	r16, r23
     346:	07 07       	cpc	r16, r23
     348:	07 07       	cpc	r16, r23
     34a:	0f 0f       	add	r16, r31
     34c:	3f 7f       	andi	r19, 0xFF	; 255
     34e:	ff ff       	.word	0xffff	; ????
     350:	ff ff       	.word	0xffff	; ????
     352:	ff ff       	.word	0xffff	; ????
     354:	ff ff       	.word	0xffff	; ????
     356:	fc f0       	brlt	.+62     	; 0x396 <__trampolines_end+0x32e>
     358:	80 00       	.word	0x0080	; ????
     35a:	00 00       	nop
     35c:	00 0f       	add	r16, r16
     35e:	0f 0f       	add	r16, r31
     360:	0f 0f       	add	r16, r31
     362:	0f 0f       	add	r16, r31
     364:	0f 0f       	add	r16, r31
     366:	0f 0f       	add	r16, r31
	...
     374:	00 00       	nop
     376:	00 c0       	rjmp	.+0      	; 0x378 <__trampolines_end+0x310>
     378:	ff ff       	.word	0xffff	; ????
     37a:	ff ff       	.word	0xffff	; ????
     37c:	ff ff       	.word	0xffff	; ????
     37e:	ff ff       	.word	0xffff	; ????
     380:	ff ff       	.word	0xffff	; ????
     382:	3f 00       	.word	0x003f	; ????
	...
     398:	00 00       	nop
     39a:	00 80       	ld	r0, Z
     39c:	c0 e0       	ldi	r28, 0x00	; 0
     39e:	f8 fc       	.word	0xfcf8	; ????
     3a0:	ff ff       	.word	0xffff	; ????
     3a2:	ff ff       	.word	0xffff	; ????
     3a4:	ff ff       	.word	0xffff	; ????
     3a6:	ff ff       	.word	0xffff	; ????
     3a8:	7f 1f       	adc	r23, r31
     3aa:	07 01       	movw	r0, r14
	...
     3bc:	00 00       	nop
     3be:	80 c0       	rjmp	.+256    	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
     3c0:	e0 f0       	brcs	.+56     	; 0x3fa <__trampolines_end+0x392>
     3c2:	fc fe       	.word	0xfefc	; ????
     3c4:	ff ff       	.word	0xffff	; ????
     3c6:	ff ff       	.word	0xffff	; ????
     3c8:	ff ff       	.word	0xffff	; ????
     3ca:	ff 7f       	andi	r31, 0xFF	; 255
     3cc:	3f 1f       	adc	r19, r31
     3ce:	07 03       	mulsu	r16, r23
     3d0:	01 00       	.word	0x0001	; ????
	...
     3de:	00 00       	nop
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <__trampolines_end+0x37a>
     3e2:	e0 f0       	brcs	.+56     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     3e4:	f8 fc       	.word	0xfcf8	; ????
     3e6:	fe ff       	.word	0xfffe	; ????
     3e8:	ff ff       	.word	0xffff	; ????
     3ea:	ff ff       	.word	0xffff	; ????
     3ec:	ff 7f       	andi	r31, 0xFF	; 255
     3ee:	3f 1f       	adc	r19, r31
     3f0:	0f 07       	cpc	r16, r31
     3f2:	03 01       	movw	r0, r6
	...
     404:	00 00       	nop
     406:	f0 f8       	bld	r15, 0
     408:	fc fe       	.word	0xfefc	; ????
     40a:	ff ff       	.word	0xffff	; ????
     40c:	ff ff       	.word	0xffff	; ????
     40e:	ff ff       	.word	0xffff	; ????
     410:	ff ff       	.word	0xffff	; ????
     412:	ff ff       	.word	0xffff	; ????
     414:	fb f9       	.word	0xf9fb	; ????
     416:	f8 f8       	.word	0xf8f8	; ????
     418:	f8 f8       	.word	0xf8f8	; ????
     41a:	f8 f8       	.word	0xf8f8	; ????
     41c:	f8 f8       	.word	0xf8f8	; ????
     41e:	f8 f8       	.word	0xf8f8	; ????
     420:	f8 f8       	.word	0xf8f8	; ????
     422:	f8 f8       	.word	0xf8f8	; ????
     424:	f8 f8       	.word	0xf8f8	; ????
     426:	f8 f8       	.word	0xf8f8	; ????
     428:	f8 f8       	.word	0xf8f8	; ????
     42a:	f8 f8       	.word	0xf8f8	; ????
     42c:	f8 00       	.word	0x00f8	; ????
     42e:	00 00       	nop
     430:	0f 0f       	add	r16, r31
     432:	0f 0f       	add	r16, r31
     434:	0f 0f       	add	r16, r31
     436:	0f 0f       	add	r16, r31
     438:	0f 0f       	add	r16, r31
     43a:	0f 0f       	add	r16, r31
     43c:	0f 0f       	add	r16, r31
     43e:	0f 0f       	add	r16, r31
     440:	0f 0f       	add	r16, r31
     442:	0f 0f       	add	r16, r31
     444:	0f 0f       	add	r16, r31
     446:	0f 0f       	add	r16, r31
     448:	0f 0f       	add	r16, r31
     44a:	0f 0f       	add	r16, r31
     44c:	0f 0f       	add	r16, r31
     44e:	0f 0f       	add	r16, r31
     450:	0f 0f       	add	r16, r31
     452:	0f 0f       	add	r16, r31
     454:	0f 0f       	add	r16, r31
     456:	0f 00       	.word	0x000f	; ????
     458:	00 00       	nop
     45a:	00 00       	nop
     45c:	00 00       	nop
     45e:	00 80       	ld	r0, Z
     460:	c0 e0       	ldi	r28, 0x00	; 0
     462:	e0 f0       	brcs	.+56     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     464:	f0 f8       	bld	r15, 0
     466:	f8 f8       	.word	0xf8f8	; ????
     468:	fc fc       	.word	0xfcfc	; ????
     46a:	fc fc       	.word	0xfcfc	; ????
     46c:	fc fc       	.word	0xfcfc	; ????
     46e:	fc fc       	.word	0xfcfc	; ????
     470:	fc fc       	.word	0xfcfc	; ????
     472:	f8 f8       	.word	0xf8f8	; ????
     474:	f8 f8       	.word	0xf8f8	; ????
     476:	f0 f0       	brcs	.+60     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     478:	e0 e0       	ldi	r30, 0x00	; 0
     47a:	c0 80       	ld	r12, Z
	...
     484:	00 f0       	brcs	.+0      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     486:	fc fe       	.word	0xfefc	; ????
     488:	ff ff       	.word	0xffff	; ????
     48a:	ff ff       	.word	0xffff	; ????
     48c:	ff ff       	.word	0xffff	; ????
     48e:	ff ff       	.word	0xffff	; ????
     490:	3f 1f       	adc	r19, r31
     492:	0f 07       	cpc	r16, r31
     494:	07 07       	cpc	r16, r23
     496:	07 07       	cpc	r16, r23
     498:	07 07       	cpc	r16, r23
     49a:	07 0f       	add	r16, r23
     49c:	0f 1f       	adc	r16, r31
     49e:	7f ff       	.word	0xff7f	; ????
     4a0:	ff ff       	.word	0xffff	; ????
     4a2:	ff ff       	.word	0xffff	; ????
     4a4:	ff ff       	.word	0xffff	; ????
     4a6:	ff fe       	.word	0xfeff	; ????
     4a8:	f8 c0       	rjmp	.+496    	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
     4aa:	00 00       	nop
     4ac:	00 00       	nop
     4ae:	03 03       	mulsu	r16, r19
     4b0:	03 03       	mulsu	r16, r19
     4b2:	03 03       	mulsu	r16, r19
     4b4:	03 03       	mulsu	r16, r19
     4b6:	03 03       	mulsu	r16, r19
     4b8:	03 00       	.word	0x0003	; ????
	...
     4c6:	00 00       	nop
     4c8:	c0 ff       	sbrs	r28, 0
     4ca:	ff ff       	.word	0xffff	; ????
     4cc:	ff ff       	.word	0xffff	; ????
     4ce:	ff ff       	.word	0xffff	; ????
     4d0:	ff ff       	.word	0xffff	; ????
     4d2:	ff 3f       	cpi	r31, 0xFF	; 255
	...
     4e4:	f8 f8       	.word	0xf8f8	; ????
     4e6:	f8 f8       	.word	0xf8f8	; ????
     4e8:	f8 f8       	.word	0xf8f8	; ????
     4ea:	f8 f8       	.word	0xf8f8	; ????
     4ec:	f8 f8       	.word	0xf8f8	; ????
     4ee:	fc fc       	.word	0xfcfc	; ????
     4f0:	fe ff       	.word	0xfffe	; ????
     4f2:	ff ff       	.word	0xffff	; ????
     4f4:	ff ff       	.word	0xffff	; ????
     4f6:	7f 3f       	cpi	r23, 0xFF	; 255
     4f8:	1f 1f       	adc	r17, r31
     4fa:	0f 03       	fmul	r16, r23
     4fc:	01 00       	.word	0x0001	; ????
	...
     50e:	0f 0f       	add	r16, r31
     510:	0f 0f       	add	r16, r31
     512:	0f 0f       	add	r16, r31
     514:	0f 0f       	add	r16, r31
     516:	0f 0f       	add	r16, r31
     518:	0f 1f       	adc	r16, r31
     51a:	1f 3f       	cpi	r17, 0xFF	; 255
     51c:	7f ff       	.word	0xff7f	; ????
     51e:	ff ff       	.word	0xffff	; ????
     520:	ff ff       	.word	0xffff	; ????
     522:	fe fe       	.word	0xfefe	; ????
     524:	fc f8       	.word	0xf8fc	; ????
     526:	f0 c0       	rjmp	.+480    	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
     528:	00 00       	nop
     52a:	00 00       	nop
     52c:	e0 e0       	ldi	r30, 0x00	; 0
     52e:	e0 e0       	ldi	r30, 0x00	; 0
     530:	e0 e0       	ldi	r30, 0x00	; 0
     532:	e0 e0       	ldi	r30, 0x00	; 0
     534:	e0 e0       	ldi	r30, 0x00	; 0
     536:	e0 00       	.word	0x00e0	; ????
	...
     544:	00 00       	nop
     546:	00 81       	ld	r16, Z
     548:	ff ff       	.word	0xffff	; ????
     54a:	ff ff       	.word	0xffff	; ????
     54c:	ff ff       	.word	0xffff	; ????
     54e:	ff ff       	.word	0xffff	; ????
     550:	ff ff       	.word	0xffff	; ????
     552:	fe 00       	.word	0x00fe	; ????
     554:	00 00       	nop
     556:	03 0f       	add	r16, r19
     558:	3f 7f       	andi	r19, 0xFF	; 255
     55a:	ff ff       	.word	0xffff	; ????
     55c:	ff ff       	.word	0xffff	; ????
     55e:	ff ff       	.word	0xffff	; ????
     560:	ff ff       	.word	0xffff	; ????
     562:	fc f8       	.word	0xf8fc	; ????
     564:	f8 f0       	brcs	.+62     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     566:	f0 f0       	brcs	.+60     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     568:	f0 f0       	brcs	.+60     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
     56a:	f0 f0       	brcs	.+60     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
     56c:	f0 f8       	bld	r15, 0
     56e:	f8 fc       	.word	0xfcf8	; ????
     570:	fe ff       	.word	0xfffe	; ????
     572:	ff ff       	.word	0xffff	; ????
     574:	ff ff       	.word	0xffff	; ????
     576:	ff ff       	.word	0xffff	; ????
     578:	7f 3f       	cpi	r23, 0xFF	; 255
     57a:	1f 07       	cpc	r17, r31
	...
     584:	00 01       	movw	r0, r0
     586:	03 03       	mulsu	r16, r19
     588:	07 07       	cpc	r16, r23
     58a:	0f 0f       	add	r16, r31
     58c:	0f 0f       	add	r16, r31
     58e:	1f 1f       	adc	r17, r31
     590:	1f 1f       	adc	r17, r31
     592:	1f 1f       	adc	r17, r31
     594:	1f 1f       	adc	r17, r31
     596:	1f 1f       	adc	r17, r31
     598:	0f 0f       	add	r16, r31
     59a:	0f 0f       	add	r16, r31
     59c:	07 07       	cpc	r16, r23
     59e:	03 03       	mulsu	r16, r19
     5a0:	01 00       	.word	0x0001	; ????
	...
     5ba:	00 00       	nop
     5bc:	00 80       	ld	r0, Z
     5be:	c0 f0       	brcs	.+48     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
     5c0:	f8 f8       	.word	0xf8f8	; ????
     5c2:	f8 f8       	.word	0xf8f8	; ????
     5c4:	f8 f8       	.word	0xf8f8	; ????
     5c6:	f8 f8       	.word	0xf8f8	; ????
     5c8:	f8 f8       	.word	0xf8f8	; ????
     5ca:	f8 00       	.word	0x00f8	; ????
	...
     5e0:	00 00       	nop
     5e2:	80 c0       	rjmp	.+256    	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
     5e4:	f0 f8       	bld	r15, 0
     5e6:	fe ff       	.word	0xfffe	; ????
     5e8:	ff ff       	.word	0xffff	; ????
     5ea:	ff ff       	.word	0xffff	; ????
     5ec:	ff ff       	.word	0xffff	; ????
     5ee:	ff ff       	.word	0xffff	; ????
     5f0:	ff ff       	.word	0xffff	; ????
     5f2:	ff ff       	.word	0xffff	; ????
     5f4:	ff 00       	.word	0x00ff	; ????
	...
     606:	00 80       	ld	r0, Z
     608:	c0 f0       	brcs	.+48     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     60a:	fc fe       	.word	0xfefc	; ????
     60c:	ff ff       	.word	0xffff	; ????
     60e:	ff ff       	.word	0xffff	; ????
     610:	ff 7f       	andi	r31, 0xFF	; 255
     612:	1f 07       	cpc	r17, r31
     614:	ff ff       	.word	0xffff	; ????
     616:	ff ff       	.word	0xffff	; ????
     618:	ff ff       	.word	0xffff	; ????
     61a:	ff ff       	.word	0xffff	; ????
     61c:	ff ff       	.word	0xffff	; ????
     61e:	ff 00       	.word	0x00ff	; ????
	...
     62c:	80 c0       	rjmp	.+256    	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
     62e:	f0 fc       	sbrc	r15, 0
     630:	fe ff       	.word	0xfffe	; ????
     632:	ff ff       	.word	0xffff	; ????
     634:	ff ff       	.word	0xffff	; ????
     636:	3f 1f       	adc	r19, r31
     638:	07 03       	mulsu	r16, r23
     63a:	00 00       	nop
     63c:	00 00       	nop
     63e:	ff ff       	.word	0xffff	; ????
     640:	ff ff       	.word	0xffff	; ????
     642:	ff ff       	.word	0xffff	; ????
     644:	ff ff       	.word	0xffff	; ????
     646:	ff ff       	.word	0xffff	; ????
     648:	ff 00       	.word	0x00ff	; ????
     64a:	00 00       	nop
     64c:	00 00       	nop
     64e:	00 00       	nop
     650:	00 80       	ld	r0, Z
     652:	c0 f0       	brcs	.+48     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
     654:	fc fe       	.word	0xfefc	; ????
     656:	ff ff       	.word	0xffff	; ????
     658:	ff ff       	.word	0xffff	; ????
     65a:	ff bf       	out	0x3f, r31	; 63
     65c:	9f 87       	std	Y+15, r25	; 0x0f
     65e:	81 80       	ldd	r8, Z+1	; 0x01
     660:	80 80       	ld	r8, Z
     662:	80 80       	ld	r8, Z
     664:	80 80       	ld	r8, Z
     666:	80 80       	ld	r8, Z
     668:	ff ff       	.word	0xffff	; ????
     66a:	ff ff       	.word	0xffff	; ????
     66c:	ff ff       	.word	0xffff	; ????
     66e:	ff ff       	.word	0xffff	; ????
     670:	ff ff       	.word	0xffff	; ????
     672:	ff 80       	ldd	r15, Y+7	; 0x07
     674:	80 80       	ld	r8, Z
     676:	80 80       	ld	r8, Z
     678:	80 80       	ld	r8, Z
     67a:	0e ff       	.word	0xff0e	; ????
     67c:	ff ff       	.word	0xffff	; ????
     67e:	ff ff       	.word	0xffff	; ????
     680:	ff ff       	.word	0xffff	; ????
     682:	ff ff       	.word	0xffff	; ????
     684:	ff ff       	.word	0xffff	; ????
     686:	ff ff       	.word	0xffff	; ????
     688:	ff ff       	.word	0xffff	; ????
     68a:	ff ff       	.word	0xffff	; ????
     68c:	ff ff       	.word	0xffff	; ????
     68e:	ff ff       	.word	0xffff	; ????
     690:	ff ff       	.word	0xffff	; ????
     692:	ff ff       	.word	0xffff	; ????
     694:	ff ff       	.word	0xffff	; ????
     696:	ff ff       	.word	0xffff	; ????
     698:	ff ff       	.word	0xffff	; ????
     69a:	ff ff       	.word	0xffff	; ????
     69c:	ff ff       	.word	0xffff	; ????
     69e:	ff ff       	.word	0xffff	; ????
     6a0:	ff ff       	.word	0xffff	; ????
     6a2:	ff ff       	.word	0xffff	; ????
	...
     6bc:	ff ff       	.word	0xffff	; ????
     6be:	ff ff       	.word	0xffff	; ????
     6c0:	ff ff       	.word	0xffff	; ????
     6c2:	ff ff       	.word	0xffff	; ????
     6c4:	ff ff       	.word	0xffff	; ????
     6c6:	ff 00       	.word	0x00ff	; ????
	...
     6e4:	00 00       	nop
     6e6:	0f 0f       	add	r16, r31
     6e8:	0f 0f       	add	r16, r31
     6ea:	0f 0f       	add	r16, r31
     6ec:	0f 0f       	add	r16, r31
     6ee:	0f 0f       	add	r16, r31
     6f0:	0f 00       	.word	0x000f	; ????
	...
     6fe:	00 f8       	bld	r0, 0
     700:	f8 f8       	.word	0xf8f8	; ????
     702:	f8 f8       	.word	0xf8f8	; ????
     704:	f8 f8       	.word	0xf8f8	; ????
     706:	f8 f8       	.word	0xf8f8	; ????
     708:	f8 f8       	.word	0xf8f8	; ????
     70a:	f8 f8       	.word	0xf8f8	; ????
     70c:	f8 f8       	.word	0xf8f8	; ????
     70e:	f8 f8       	.word	0xf8f8	; ????
     710:	f8 f8       	.word	0xf8f8	; ????
     712:	f8 f8       	.word	0xf8f8	; ????
     714:	f8 f8       	.word	0xf8f8	; ????
     716:	f8 f8       	.word	0xf8f8	; ????
     718:	f8 f8       	.word	0xf8f8	; ????
     71a:	f8 f8       	.word	0xf8f8	; ????
     71c:	f8 f8       	.word	0xf8f8	; ????
     71e:	f8 00       	.word	0x00f8	; ????
	...
     728:	fc ff       	.word	0xfffc	; ????
     72a:	ff ff       	.word	0xffff	; ????
     72c:	ff ff       	.word	0xffff	; ????
     72e:	ff ff       	.word	0xffff	; ????
     730:	ff ff       	.word	0xffff	; ????
     732:	0f 0f       	add	r16, r31
     734:	0f 0f       	add	r16, r31
     736:	0f 0f       	add	r16, r31
     738:	0f 0f       	add	r16, r31
     73a:	0f 0f       	add	r16, r31
     73c:	0f 0f       	add	r16, r31
     73e:	0f 0f       	add	r16, r31
     740:	0f 0f       	add	r16, r31
     742:	0f 0f       	add	r16, r31
     744:	0f 0f       	add	r16, r31
     746:	0f 0f       	add	r16, r31
     748:	0f 00       	.word	0x000f	; ????
     74a:	00 00       	nop
     74c:	00 00       	nop
     74e:	00 00       	nop
     750:	00 f8       	bld	r0, 0
     752:	ff ff       	.word	0xffff	; ????
     754:	ff ff       	.word	0xffff	; ????
     756:	ff ff       	.word	0xffff	; ????
     758:	ff ff       	.word	0xffff	; ????
     75a:	ff 07       	cpc	r31, r31
     75c:	00 00       	nop
     75e:	00 80       	ld	r0, Z
     760:	80 80       	ld	r8, Z
     762:	80 80       	ld	r8, Z
     764:	80 80       	ld	r8, Z
     766:	80 80       	ld	r8, Z
	...
     778:	00 00       	nop
     77a:	e0 ff       	sbrs	r30, 0
     77c:	ff ff       	.word	0xffff	; ????
     77e:	ff ff       	.word	0xffff	; ????
     780:	ff ff       	.word	0xffff	; ????
     782:	ff ff       	.word	0xffff	; ????
     784:	ff fe       	.word	0xfeff	; ????
     786:	fe ff       	.word	0xfffe	; ????
     788:	ff ff       	.word	0xffff	; ????
     78a:	ff ff       	.word	0xffff	; ????
     78c:	ff ff       	.word	0xffff	; ????
     78e:	ff ff       	.word	0xffff	; ????
     790:	ff ff       	.word	0xffff	; ????
     792:	ff ff       	.word	0xffff	; ????
     794:	ff fe       	.word	0xfeff	; ????
     796:	fe fc       	.word	0xfcfe	; ????
     798:	fc f8       	.word	0xf8fc	; ????
     79a:	f0 c0       	rjmp	.+480    	; 0x97c <__stack+0x7d>
     79c:	80 00       	.word	0x0080	; ????
     79e:	00 00       	nop
     7a0:	00 00       	nop
     7a2:	00 00       	nop
     7a4:	01 01       	movw	r0, r2
     7a6:	01 03       	mulsu	r16, r17
     7a8:	03 03       	mulsu	r16, r19
     7aa:	03 07       	cpc	r16, r19
     7ac:	07 03       	mulsu	r16, r23
     7ae:	01 01       	movw	r0, r2
	...
     7b8:	00 01       	movw	r0, r0
     7ba:	03 03       	mulsu	r16, r19
     7bc:	0f 3f       	cpi	r16, 0xFF	; 255
     7be:	ff ff       	.word	0xffff	; ????
     7c0:	ff ff       	.word	0xffff	; ????
     7c2:	ff ff       	.word	0xffff	; ????
     7c4:	ff ff       	.word	0xffff	; ????
     7c6:	ff fc       	.word	0xfcff	; ????
     7c8:	c0 00       	.word	0x00c0	; ????
     7ca:	00 00       	nop
     7cc:	00 e0       	ldi	r16, 0x00	; 0
     7ce:	e0 e0       	ldi	r30, 0x00	; 0
     7d0:	e0 e0       	ldi	r30, 0x00	; 0
     7d2:	e0 e0       	ldi	r30, 0x00	; 0
     7d4:	e0 e0       	ldi	r30, 0x00	; 0
     7d6:	e0 c0       	rjmp	.+448    	; 0x998 <__stack+0x99>
	...
     7e4:	00 00       	nop
     7e6:	00 c0       	rjmp	.+0      	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
     7e8:	ff ff       	.word	0xffff	; ????
     7ea:	ff ff       	.word	0xffff	; ????
     7ec:	ff ff       	.word	0xffff	; ????
     7ee:	ff ff       	.word	0xffff	; ????
     7f0:	ff ff       	.word	0xffff	; ????
     7f2:	1f 00       	.word	0x001f	; ????
     7f4:	00 00       	nop
     7f6:	00 03       	mulsu	r16, r16
     7f8:	0f 1f       	adc	r16, r31
     7fa:	7f ff       	.word	0xff7f	; ????
     7fc:	ff ff       	.word	0xffff	; ????
     7fe:	ff ff       	.word	0xffff	; ????
     800:	ff ff       	.word	0xffff	; ????
     802:	fe fc       	.word	0xfcfe	; ????
     804:	f8 f8       	.word	0xf8f8	; ????
     806:	f0 f0       	brcs	.+60     	; 0x844 <__LOCK_REGION_LENGTH__+0x444>
     808:	f0 f0       	brcs	.+60     	; 0x846 <__LOCK_REGION_LENGTH__+0x446>
     80a:	f0 f0       	brcs	.+60     	; 0x848 <__LOCK_REGION_LENGTH__+0x448>
     80c:	f0 f8       	bld	r15, 0
     80e:	f8 fc       	.word	0xfcf8	; ????
     810:	ff ff       	.word	0xffff	; ????
     812:	ff ff       	.word	0xffff	; ????
     814:	ff ff       	.word	0xffff	; ????
     816:	ff ff       	.word	0xffff	; ????
     818:	7f 3f       	cpi	r23, 0xFF	; 255
     81a:	0f 03       	fmul	r16, r23
	...
     824:	00 00       	nop
     826:	01 01       	movw	r0, r2
     828:	03 07       	cpc	r16, r19
     82a:	07 07       	cpc	r16, r23
     82c:	0f 0f       	add	r16, r31
     82e:	0f 1f       	adc	r16, r31
     830:	1f 1f       	adc	r17, r31
     832:	1f 1f       	adc	r17, r31
     834:	1f 1f       	adc	r17, r31
     836:	1f 1f       	adc	r17, r31
     838:	1f 0f       	add	r17, r31
     83a:	0f 0f       	add	r16, r31
     83c:	07 07       	cpc	r16, r23
     83e:	03 03       	mulsu	r16, r19
     840:	01 00       	.word	0x0001	; ????
	...
     852:	00 00       	nop
     854:	00 80       	ld	r0, Z
     856:	80 c0       	rjmp	.+256    	; 0x958 <__stack+0x59>
     858:	e0 e0       	ldi	r30, 0x00	; 0
     85a:	f0 f0       	brcs	.+60     	; 0x898 <__LOCK_REGION_LENGTH__+0x498>
     85c:	f0 f8       	bld	r15, 0
     85e:	f8 f8       	.word	0xf8f8	; ????
     860:	f8 fc       	.word	0xfcf8	; ????
     862:	fc fc       	.word	0xfcfc	; ????
     864:	fc fc       	.word	0xfcfc	; ????
     866:	fc fc       	.word	0xfcfc	; ????
	...
     878:	80 c0       	rjmp	.+256    	; 0x97a <__stack+0x7b>
     87a:	f0 f8       	bld	r15, 0
     87c:	fc fe       	.word	0xfefc	; ????
     87e:	ff ff       	.word	0xffff	; ????
     880:	ff ff       	.word	0xffff	; ????
     882:	ff ff       	.word	0xffff	; ????
     884:	7f 7f       	andi	r23, 0xFF	; 255
     886:	3f 1f       	adc	r19, r31
     888:	1f 0f       	add	r17, r31
     88a:	0f 0f       	add	r16, r31
     88c:	07 07       	cpc	r16, r23
     88e:	07 07       	cpc	r16, r23
     890:	07 07       	cpc	r16, r23
	...
     89e:	00 80       	ld	r0, Z
     8a0:	f0 fe       	sbrs	r15, 0
     8a2:	ff ff       	.word	0xffff	; ????
     8a4:	ff ff       	.word	0xffff	; ????
     8a6:	ff ff       	.word	0xffff	; ????
     8a8:	ff ff       	.word	0xffff	; ????
     8aa:	3f 07       	cpc	r19, r31
     8ac:	03 00       	.word	0x0003	; ????
     8ae:	00 80       	ld	r0, Z
     8b0:	80 80       	ld	r8, Z
     8b2:	c0 c0       	rjmp	.+384    	; 0xa34 <__stack+0x135>
     8b4:	c0 c0       	rjmp	.+384    	; 0xa36 <__stack+0x137>
     8b6:	c0 c0       	rjmp	.+384    	; 0xa38 <__stack+0x139>
     8b8:	80 80       	ld	r8, Z
     8ba:	80 00       	.word	0x0080	; ????
	...
     8c8:	f0 ff       	sbrs	r31, 0
     8ca:	ff ff       	.word	0xffff	; ????
     8cc:	ff ff       	.word	0xffff	; ????
     8ce:	ff ff       	.word	0xffff	; ????
     8d0:	ff ff       	.word	0xffff	; ????
     8d2:	ff f9       	.word	0xf9ff	; ????
     8d4:	fc fe       	.word	0xfefc	; ????
     8d6:	fe ff       	.word	0xfffe	; ????
     8d8:	7f 7f       	andi	r23, 0xFF	; 255
     8da:	7f 7f       	andi	r23, 0xFF	; 255
     8dc:	7f 7f       	andi	r23, 0xFF	; 255
     8de:	ff ff       	.word	0xffff	; ????
     8e0:	ff ff       	.word	0xffff	; ????
     8e2:	ff ff       	.word	0xffff	; ????
     8e4:	ff ff       	.word	0xffff	; ????
     8e6:	ff fe       	.word	0xfeff	; ????
     8e8:	fc fc       	.word	0xfcfc	; ????
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	80 00       	.word	0x0080	; ????
     8ee:	00 00       	nop
     8f0:	00 00       	nop
     8f2:	ff ff       	.word	0xffff	; ????
     8f4:	ff ff       	.word	0xffff	; ????
     8f6:	ff ff       	.word	0xffff	; ????
     8f8:	ff ff       	.word	0xffff	; ????
     8fa:	ff ff       	.word	0xffff	; ????
     8fc:	ff 0f       	add	r31, r31
     8fe:	03 01       	movw	r0, r6
	...
     908:	00 00       	nop
     90a:	01 03       	mulsu	r16, r17
     90c:	07 1f       	adc	r16, r23
     90e:	ff ff       	.word	0xffff	; ????
     910:	ff ff       	.word	0xffff	; ????
     912:	ff ff       	.word	0xffff	; ????
     914:	ff ff       	.word	0xffff	; ????
     916:	ff fe       	.word	0xfeff	; ????
     918:	e0 00       	.word	0x00e0	; ????
     91a:	00 00       	nop
     91c:	07 7f       	andi	r16, 0xF7	; 247
     91e:	ff ff       	.word	0xffff	; ????
     920:	ff ff       	.word	0xffff	; ????
     922:	ff ff       	.word	0xffff	; ????
     924:	ff ff       	.word	0xffff	; ????
     926:	ff e0       	ldi	r31, 0x0F	; 15
	...
     934:	00 00       	nop
     936:	00 c0       	rjmp	.+0      	; 0x938 <__stack+0x39>
     938:	ff ff       	.word	0xffff	; ????
     93a:	ff ff       	.word	0xffff	; ????
     93c:	ff ff       	.word	0xffff	; ????
     93e:	ff ff       	.word	0xffff	; ????
     940:	ff ff       	.word	0xffff	; ????
     942:	3f 00       	.word	0x003f	; ????
     944:	00 00       	nop
     946:	00 00       	nop
     948:	03 0f       	add	r16, r19
     94a:	1f 7f       	andi	r17, 0xFF	; 255
     94c:	ff ff       	.word	0xffff	; ????
     94e:	ff ff       	.word	0xffff	; ????
     950:	ff ff       	.word	0xffff	; ????
     952:	ff fe       	.word	0xfeff	; ????
     954:	fc f8       	.word	0xf8fc	; ????
     956:	f0 f0       	brcs	.+60     	; 0x994 <__stack+0x95>
     958:	f0 f0       	brcs	.+60     	; 0x996 <__stack+0x97>
     95a:	f0 f0       	brcs	.+60     	; 0x998 <__stack+0x99>
     95c:	f0 f8       	bld	r15, 0
     95e:	f8 fc       	.word	0xfcf8	; ????
     960:	ff ff       	.word	0xffff	; ????
     962:	ff ff       	.word	0xffff	; ????
     964:	ff ff       	.word	0xffff	; ????
     966:	ff ff       	.word	0xffff	; ????
     968:	7f 1f       	adc	r23, r31
     96a:	0f 01       	movw	r0, r30
	...
     974:	00 00       	nop
     976:	00 01       	movw	r0, r0
     978:	01 03       	mulsu	r16, r17
     97a:	07 07       	cpc	r16, r23
     97c:	0f 0f       	add	r16, r31
     97e:	0f 1f       	adc	r16, r31
     980:	1f 1f       	adc	r17, r31
     982:	1f 1f       	adc	r17, r31
     984:	1f 1f       	adc	r17, r31
     986:	1f 1f       	adc	r17, r31
     988:	1f 0f       	add	r17, r31
     98a:	0f 0f       	add	r16, r31
     98c:	07 07       	cpc	r16, r23
     98e:	03 01       	movw	r0, r6
     990:	01 00       	.word	0x0001	; ????
	...
     a16:	00 00       	nop
     a18:	00 f0       	brcs	.+0      	; 0xa1a <__stack+0x11b>
     a1a:	f0 f0       	brcs	.+60     	; 0xa58 <__stack+0x159>
     a1c:	f0 f0       	brcs	.+60     	; 0xa5a <__stack+0x15b>
     a1e:	f0 f0       	brcs	.+60     	; 0xa5c <__stack+0x15d>
     a20:	f0 f0       	brcs	.+60     	; 0xa5e <__stack+0x15f>
     a22:	f0 f0       	brcs	.+60     	; 0xa60 <__stack+0x161>
     a24:	f0 f0       	brcs	.+60     	; 0xa62 <__stack+0x163>
     a26:	f0 f0       	brcs	.+60     	; 0xa64 <__stack+0x165>
     a28:	f0 f0       	brcs	.+60     	; 0xa66 <__stack+0x167>
     a2a:	f0 f0       	brcs	.+60     	; 0xa68 <__stack+0x169>
     a2c:	f0 f0       	brcs	.+60     	; 0xa6a <__stack+0x16b>
     a2e:	f0 f0       	brcs	.+60     	; 0xa6c <__stack+0x16d>
     a30:	f0 f0       	brcs	.+60     	; 0xa6e <__stack+0x16f>
     a32:	f0 f0       	brcs	.+60     	; 0xa70 <__stack+0x171>
     a34:	f0 f0       	brcs	.+60     	; 0xa72 <__stack+0x173>
     a36:	f0 f0       	brcs	.+60     	; 0xa74 <__stack+0x175>
     a38:	f0 f0       	brcs	.+60     	; 0xa76 <__stack+0x177>
     a3a:	f0 f0       	brcs	.+60     	; 0xa78 <__stack+0x179>
     a3c:	f0 00       	.word	0x00f0	; ????
     a3e:	00 00       	nop
     a40:	00 00       	nop
     a42:	00 0f       	add	r16, r16
     a44:	0f 0f       	add	r16, r31
     a46:	0f 0f       	add	r16, r31
     a48:	0f 0f       	add	r16, r31
     a4a:	0f 0f       	add	r16, r31
     a4c:	0f 0f       	add	r16, r31
     a4e:	0f 0f       	add	r16, r31
     a50:	0f 0f       	add	r16, r31
     a52:	0f 0f       	add	r16, r31
     a54:	0f 0f       	add	r16, r31
     a56:	0f 0f       	add	r16, r31
     a58:	0f 0f       	add	r16, r31
     a5a:	0f 0f       	add	r16, r31
     a5c:	0f 0f       	add	r16, r31
     a5e:	0f 0f       	add	r16, r31
     a60:	0f 0f       	add	r16, r31
     a62:	0f 0f       	add	r16, r31
     a64:	0f 0f       	add	r16, r31
     a66:	0f 00       	.word	0x000f	; ????
	...

00000ae8 <bigNumbers>:
     ae8:	00 00 00 c0 e0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
     af8:	f0 f0 f0 e0 c0 00 00 00 00 00 00 ff ff ff ff 01     ................
	...
     b10:	01 ff ff ff ff 00 00 00 00 00 00 ff ff ff ff 80     ................
	...
     b28:	80 ff ff ff ff 00 00 00 00 00 00 03 07 0f 0f 0f     ................
     b38:	0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 07 03 00 00 00     ................
	...
     b54:	00 00 e0 f0 f0 e0 00 00 00 00 00 00 00 00 00 00     ................
	...
     b6c:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
     b84:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
     b9c:	00 00 03 07 07 03 00 00 00 00 00 00 00 00 00 e0     ................
     bac:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 e0     ................
     bbc:	00 00 00 00 00 00 00 81 c1 c0 c0 c0 c0 c0 c0 c0     ................
     bcc:	c0 c0 c0 e1 ff ff ff ff 00 00 00 00 00 00 00 ff     ................
     bdc:	ff ff ff 87 03 03 03 03 03 03 03 03 03 03 83 81     ................
     bec:	00 00 00 00 00 00 00 07 0f 0f 0f 0f 0f 0f 0f 0f     ................
     bfc:	0f 0f 0f 0f 0f 0f 0f 07 00 00 00 00 00 00 00 e0     ................
     c0c:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 e0     ................
     c1c:	00 00 00 00 00 00 00 81 c1 c0 c0 c0 c0 c0 c0 c0     ................
     c2c:	c0 c0 c0 e1 ff ff ff 7f 00 00 00 00 00 00 00 81     ................
     c3c:	83 03 03 03 03 03 03 03 03 03 03 87 ff ff ff fe     ................
     c4c:	00 00 00 00 00 00 00 07 0f 0f 0f 0f 0f 0f 0f 0f     ................
     c5c:	0f 0f 0f 0f 0f 0f 0f 07 00 00 00 00 00 00 00 e0     ................
     c6c:	f0 f0 f0 30 00 00 00 00 00 00 00 30 f0 f0 f0 e0     ...0.......0....
     c7c:	00 00 00 00 00 00 00 ff ff ff ff e0 c0 c0 c0 c0     ................
     c8c:	c0 c0 c0 e0 ff ff ff ff 00 00 00 00 00 00 00 01     ................
     c9c:	03 03 03 03 03 03 03 03 03 03 03 07 ff ff ff ff     ................
	...
     cbc:	00 00 00 0c 0f 0f 0f 07 00 00 00 00 00 00 00 e0     ................
     ccc:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 e0     ................
     cdc:	00 00 00 00 00 00 00 ff ff ff ff e1 c0 c0 c0 c0     ................
     cec:	c0 c0 c0 c0 c0 c0 c1 81 00 00 00 00 00 00 00 81     ................
     cfc:	83 03 03 03 03 03 03 03 03 03 03 87 ff ff ff ff     ................
     d0c:	00 00 00 00 00 00 00 07 0f 0f 0f 0f 0f 0f 0f 0f     ................
     d1c:	0f 0f 0f 0f 0f 0f 0f 07 00 00 00 00 00 00 00 e0     ................
     d2c:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 e0     ................
     d3c:	00 00 00 00 00 00 00 ff ff ff ff e1 c0 c0 c0 c0     ................
     d4c:	c0 c0 c0 c0 c0 c0 c1 81 00 00 00 00 00 00 00 ff     ................
     d5c:	ff ff ff 87 03 03 03 03 03 03 03 87 ff ff ff ff     ................
     d6c:	00 00 00 00 00 00 00 07 0f 0f 0f 0f 0f 0f 0f 0f     ................
     d7c:	0f 0f 0f 0f 0f 0f 0f 07 00 00 00 00 00 00 00 e0     ................
     d8c:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 e0     ................
     d9c:	00 00 00 00 00 00 00 01 01 00 00 00 00 00 00 00     ................
     dac:	00 00 00 01 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     dc8:	ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
     dd8:	00 00 00 00 00 00 00 0c 0f 0f 0f 07 00 00 00 00     ................
     de8:	00 00 00 e0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
     df8:	f0 f0 f0 e0 00 00 00 00 00 00 00 7f ff ff ff e1     ................
     e08:	c0 c0 c0 c0 c0 c0 c0 e1 ff ff ff 3f 00 00 00 00     ...........?....
     e18:	00 00 00 fe ff ff ff 87 03 03 03 03 03 03 03 87     ................
     e28:	ff ff ff fe 00 00 00 00 00 00 00 07 0f 0f 0f 0f     ................
     e38:	0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 07 00 00 00 00     ................
     e48:	00 00 00 e0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
     e58:	f0 f0 f0 e0 00 00 00 00 00 00 00 ff ff ff ff e1     ................
     e68:	c0 c0 c0 c0 c0 c0 c0 e1 ff ff ff ff 00 00 00 00     ................
     e78:	00 00 00 01 03 03 03 03 03 03 03 03 03 03 03 07     ................
     e88:	ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
     e98:	00 00 00 00 00 00 00 0c 0f 0f 0f 07 00 00 00 00     ................
	...
     ec8:	00 3c 7e 7e 7e 7e 3c 00 00 00 00 00 00 00 00 00     .<~~~~<.........
	...
     ee0:	00 f0 f8 f8 f8 f8 f0 00 00 00 00 00 00 00 00 00     ................
	...
     ef8:	00 00 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................

00000f08 <__ctors_end>:
     f08:	11 24       	eor	r1, r1
     f0a:	1f be       	out	0x3f, r1	; 63
     f0c:	cf ef       	ldi	r28, 0xFF	; 255
     f0e:	d8 e0       	ldi	r29, 0x08	; 8
     f10:	de bf       	out	0x3e, r29	; 62
     f12:	cd bf       	out	0x3d, r28	; 61

00000f14 <__do_copy_data>:
     f14:	11 e0       	ldi	r17, 0x01	; 1
     f16:	a0 e0       	ldi	r26, 0x00	; 0
     f18:	b1 e0       	ldi	r27, 0x01	; 1
     f1a:	ea e8       	ldi	r30, 0x8A	; 138
     f1c:	f3 e1       	ldi	r31, 0x13	; 19
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <__do_copy_data+0x10>
     f20:	05 90       	lpm	r0, Z+
     f22:	0d 92       	st	X+, r0
     f24:	a2 30       	cpi	r26, 0x02	; 2
     f26:	b1 07       	cpc	r27, r17
     f28:	d9 f7       	brne	.-10     	; 0xf20 <__do_copy_data+0xc>

00000f2a <__do_clear_bss>:
     f2a:	25 e0       	ldi	r18, 0x05	; 5
     f2c:	a2 e0       	ldi	r26, 0x02	; 2
     f2e:	b1 e0       	ldi	r27, 0x01	; 1
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <.do_clear_bss_start>

00000f32 <.do_clear_bss_loop>:
     f32:	1d 92       	st	X+, r1

00000f34 <.do_clear_bss_start>:
     f34:	a3 31       	cpi	r26, 0x13	; 19
     f36:	b2 07       	cpc	r27, r18
     f38:	e1 f7       	brne	.-8      	; 0xf32 <.do_clear_bss_loop>
     f3a:	0e 94 f5 07 	call	0xfea	; 0xfea <main>
     f3e:	0c 94 c3 09 	jmp	0x1386	; 0x1386 <_exit>

00000f42 <__bad_interrupt>:
     f42:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000f46 <I2C_Init>:
char I2C_Read_Nack()		/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	return TWDR;		/* Return received data */
}
     f46:	82 e1       	ldi	r24, 0x12	; 18
     f48:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     f4c:	e9 eb       	ldi	r30, 0xB9	; 185
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	80 81       	ld	r24, Z
     f52:	8c 7f       	andi	r24, 0xFC	; 252
     f54:	80 83       	st	Z, r24
     f56:	85 e0       	ldi	r24, 0x05	; 5
     f58:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     f5c:	08 95       	ret

00000f5e <I2C_Start>:
     f5e:	94 ea       	ldi	r25, 0xA4	; 164
     f60:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     f64:	ec eb       	ldi	r30, 0xBC	; 188
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	90 81       	ld	r25, Z
     f6a:	99 23       	and	r25, r25
     f6c:	ec f7       	brge	.-6      	; 0xf68 <I2C_Start+0xa>
     f6e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     f72:	98 7f       	andi	r25, 0xF8	; 248
     f74:	98 30       	cpi	r25, 0x08	; 8
     f76:	99 f4       	brne	.+38     	; 0xf9e <I2C_Start+0x40>
     f78:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     f7c:	84 e8       	ldi	r24, 0x84	; 132
     f7e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     f82:	ec eb       	ldi	r30, 0xBC	; 188
     f84:	f0 e0       	ldi	r31, 0x00	; 0
     f86:	80 81       	ld	r24, Z
     f88:	88 23       	and	r24, r24
     f8a:	ec f7       	brge	.-6      	; 0xf86 <I2C_Start+0x28>
     f8c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     f90:	88 7f       	andi	r24, 0xF8	; 248
     f92:	88 31       	cpi	r24, 0x18	; 24
     f94:	31 f0       	breq	.+12     	; 0xfa2 <I2C_Start+0x44>
     f96:	80 32       	cpi	r24, 0x20	; 32
     f98:	31 f0       	breq	.+12     	; 0xfa6 <I2C_Start+0x48>
     f9a:	83 e0       	ldi	r24, 0x03	; 3
     f9c:	08 95       	ret
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	08 95       	ret
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	08 95       	ret
     fa6:	82 e0       	ldi	r24, 0x02	; 2
     fa8:	08 95       	ret

00000faa <I2C_Write>:
     faa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     fae:	84 e8       	ldi	r24, 0x84	; 132
     fb0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     fb4:	ec eb       	ldi	r30, 0xBC	; 188
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	88 23       	and	r24, r24
     fbc:	ec f7       	brge	.-6      	; 0xfb8 <I2C_Write+0xe>
     fbe:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     fc2:	88 7f       	andi	r24, 0xF8	; 248
     fc4:	88 32       	cpi	r24, 0x28	; 40
     fc6:	21 f0       	breq	.+8      	; 0xfd0 <I2C_Write+0x26>
     fc8:	80 33       	cpi	r24, 0x30	; 48
     fca:	21 f0       	breq	.+8      	; 0xfd4 <I2C_Write+0x2a>
     fcc:	82 e0       	ldi	r24, 0x02	; 2
     fce:	08 95       	ret
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	08 95       	ret
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	08 95       	ret

00000fd8 <I2C_Stop>:

void I2C_Stop()			/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);/* Enable TWI, generate stop */
     fd8:	84 e9       	ldi	r24, 0x94	; 148
     fda:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR&(1<<TWSTO));	/* Wait until stop condition execution */
     fde:	ec eb       	ldi	r30, 0xBC	; 188
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	80 81       	ld	r24, Z
     fe4:	84 fd       	sbrc	r24, 4
     fe6:	fd cf       	rjmp	.-6      	; 0xfe2 <I2C_Stop+0xa>
     fe8:	08 95       	ret

00000fea <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fea:	0e 94 a3 07 	call	0xf46	; 0xf46 <I2C_Init>
     fee:	8f e2       	ldi	r24, 0x2F	; 47
     ff0:	95 e7       	ldi	r25, 0x75	; 117
     ff2:	01 97       	sbiw	r24, 0x01	; 1
     ff4:	f1 f7       	brne	.-4      	; 0xff2 <main+0x8>
     ff6:	00 c0       	rjmp	.+0      	; 0xff8 <main+0xe>
     ff8:	00 00       	nop
     ffa:	0e 94 92 08 	call	0x1124	; 0x1124 <InitializeDisplay>
     ffe:	0e 94 23 09 	call	0x1246	; 0x1246 <clear_display>
    1002:	00 e0       	ldi	r16, 0x00	; 0
    1004:	10 e0       	ldi	r17, 0x00	; 0
    1006:	c0 e0       	ldi	r28, 0x00	; 0
    1008:	d0 e0       	ldi	r29, 0x00	; 0
    100a:	40 e0       	ldi	r20, 0x00	; 0
    100c:	50 e0       	ldi	r21, 0x00	; 0
    100e:	60 e0       	ldi	r22, 0x00	; 0
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	ce 01       	movw	r24, r28
    1014:	0e 94 8e 09 	call	0x131c	; 0x131c <printTallyNumber>
    1018:	9f e7       	ldi	r25, 0x7F	; 127
    101a:	29 ea       	ldi	r18, 0xA9	; 169
    101c:	83 e0       	ldi	r24, 0x03	; 3
    101e:	91 50       	subi	r25, 0x01	; 1
    1020:	20 40       	sbci	r18, 0x00	; 0
    1022:	80 40       	sbci	r24, 0x00	; 0
    1024:	e1 f7       	brne	.-8      	; 0x101e <main+0x34>
    1026:	00 c0       	rjmp	.+0      	; 0x1028 <main+0x3e>
    1028:	00 00       	nop
    102a:	21 96       	adiw	r28, 0x01	; 1
    102c:	c8 30       	cpi	r28, 0x08	; 8
    102e:	d1 05       	cpc	r29, r1
    1030:	61 f7       	brne	.-40     	; 0x100a <main+0x20>
    1032:	4d e0       	ldi	r20, 0x0D	; 13
    1034:	50 e0       	ldi	r21, 0x00	; 0
    1036:	60 e0       	ldi	r22, 0x00	; 0
    1038:	70 e0       	ldi	r23, 0x00	; 0
    103a:	c8 01       	movw	r24, r16
    103c:	0e 94 36 09 	call	0x126c	; 0x126c <printBigNumber>
    1040:	0f 5f       	subi	r16, 0xFF	; 255
    1042:	1f 4f       	sbci	r17, 0xFF	; 255
    1044:	e0 cf       	rjmp	.-64     	; 0x1006 <main+0x1c>

00001046 <__vector_18>:

/********************obsluhy preruseni****************/

//Ukladanie prichadzajucej spravy do zasobnika
ISR(USART_RX_vect)
{
    1046:	1f 92       	push	r1
    1048:	0f 92       	push	r0
    104a:	0f b6       	in	r0, 0x3f	; 63
    104c:	0f 92       	push	r0
    104e:	11 24       	eor	r1, r1
    1050:	2f 93       	push	r18
    1052:	8f 93       	push	r24
    1054:	9f 93       	push	r25
    1056:	ef 93       	push	r30
    1058:	ff 93       	push	r31
	watchdog = false;	// nulovanie chyboveho stavu dispeja
    105a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	timerx = 0;			// restart casovaca - watchdog
    105e:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <timerx+0x1>
    1062:	10 92 07 05 	sts	0x0507, r1	; 0x800507 <timerx>

	if (new_msg == false)
    1066:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <new_msg>
    106a:	81 11       	cpse	r24, r1
    106c:	1e c0       	rjmp	.+60     	; 0x10aa <__vector_18+0x64>
	{
		RX_buffer[RX_index] = UDR0;
    106e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <RX_index>
    1072:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <RX_index+0x1>
    1076:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    107a:	fc 01       	movw	r30, r24
    107c:	e7 5f       	subi	r30, 0xF7	; 247
    107e:	fa 4f       	sbci	r31, 0xFA	; 250
    1080:	20 83       	st	Z, r18
		//USART_send(RX_buffer [RX_index]);  //local echo

		if (RX_buffer[RX_index] == USART_END_CHAR) //Kontrola na koncovi znak spravy
    1082:	21 36       	cpi	r18, 0x61	; 97
    1084:	41 f4       	brne	.+16     	; 0x1096 <__vector_18+0x50>
		{
			new_msg = true;
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <new_msg>
			RX_index = 0;
    108c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <RX_index+0x1>
    1090:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <RX_index>
    1094:	0a c0       	rjmp	.+20     	; 0x10aa <__vector_18+0x64>
		}
		else
		{
			RX_index++; 
    1096:	01 96       	adiw	r24, 0x01	; 1
    1098:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <RX_index+0x1>
    109c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <RX_index>
		
			if (RX_index >= USART_BUFFER)   // kontrola na pretecenie zasobnika
    10a0:	0a 97       	sbiw	r24, 0x0a	; 10
    10a2:	1c f0       	brlt	.+6      	; 0x10aa <__vector_18+0x64>
			{ 
				system_error = true;
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <system_error>
			}
		}
	}
}
    10aa:	ff 91       	pop	r31
    10ac:	ef 91       	pop	r30
    10ae:	9f 91       	pop	r25
    10b0:	8f 91       	pop	r24
    10b2:	2f 91       	pop	r18
    10b4:	0f 90       	pop	r0
    10b6:	0f be       	out	0x3f, r0	; 63
    10b8:	0f 90       	pop	r0
    10ba:	1f 90       	pop	r1
    10bc:	18 95       	reti

000010be <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
    10be:	1f 92       	push	r1
    10c0:	0f 92       	push	r0
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	0f 92       	push	r0
    10c6:	11 24       	eor	r1, r1
    10c8:	2f 93       	push	r18
    10ca:	8f 93       	push	r24
    10cc:	9f 93       	push	r25
	timerx++;
    10ce:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <timerx>
    10d2:	90 91 08 05 	lds	r25, 0x0508	; 0x800508 <timerx+0x1>
    10d6:	01 96       	adiw	r24, 0x01	; 1
    10d8:	90 93 08 05 	sts	0x0508, r25	; 0x800508 <timerx+0x1>
    10dc:	80 93 07 05 	sts	0x0507, r24	; 0x800507 <timerx>
	if (timerx > WATCHDOG_ISR_CNT)
    10e0:	81 32       	cpi	r24, 0x21	; 33
    10e2:	93 40       	sbci	r25, 0x03	; 3
    10e4:	38 f0       	brcs	.+14     	; 0x10f4 <__vector_14+0x36>
	{
		watchdog = true;
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
		timerx = 0;
    10ec:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <timerx+0x1>
    10f0:	10 92 07 05 	sts	0x0507, r1	; 0x800507 <timerx>
	}
    10f4:	9f 91       	pop	r25
    10f6:	8f 91       	pop	r24
    10f8:	2f 91       	pop	r18
    10fa:	0f 90       	pop	r0
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	0f 90       	pop	r0
    1100:	1f 90       	pop	r1
    1102:	18 95       	reti

00001104 <ssd1306_command>:
	}
	X++;
}

	
}
    1104:	cf 93       	push	r28
    1106:	c8 2f       	mov	r28, r24
    1108:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    110c:	0e 94 af 07 	call	0xf5e	; 0xf5e <I2C_Start>
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	0e 94 d5 07 	call	0xfaa	; 0xfaa <I2C_Write>
    1116:	8c 2f       	mov	r24, r28
    1118:	0e 94 d5 07 	call	0xfaa	; 0xfaa <I2C_Write>
    111c:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <I2C_Stop>
    1120:	cf 91       	pop	r28
    1122:	08 95       	ret

00001124 <InitializeDisplay>:
    1124:	5c 9a       	sbi	0x0b, 4	; 11
    1126:	54 9a       	sbi	0x0a, 4	; 10
    1128:	2f ef       	ldi	r18, 0xFF	; 255
    112a:	36 e7       	ldi	r19, 0x76	; 118
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	21 50       	subi	r18, 0x01	; 1
    1130:	30 40       	sbci	r19, 0x00	; 0
    1132:	80 40       	sbci	r24, 0x00	; 0
    1134:	e1 f7       	brne	.-8      	; 0x112e <InitializeDisplay+0xa>
    1136:	00 c0       	rjmp	.+0      	; 0x1138 <InitializeDisplay+0x14>
    1138:	00 00       	nop
    113a:	9b b1       	in	r25, 0x0b	; 11
    113c:	80 e1       	ldi	r24, 0x10	; 16
    113e:	98 27       	eor	r25, r24
    1140:	9b b9       	out	0x0b, r25	; 11
    1142:	9f ef       	ldi	r25, 0xFF	; 255
    1144:	26 e7       	ldi	r18, 0x76	; 118
    1146:	31 e0       	ldi	r19, 0x01	; 1
    1148:	91 50       	subi	r25, 0x01	; 1
    114a:	20 40       	sbci	r18, 0x00	; 0
    114c:	30 40       	sbci	r19, 0x00	; 0
    114e:	e1 f7       	brne	.-8      	; 0x1148 <InitializeDisplay+0x24>
    1150:	00 c0       	rjmp	.+0      	; 0x1152 <InitializeDisplay+0x2e>
    1152:	00 00       	nop
    1154:	9b b1       	in	r25, 0x0b	; 11
    1156:	89 27       	eor	r24, r25
    1158:	8b b9       	out	0x0b, r24	; 11
    115a:	8f ef       	ldi	r24, 0xFF	; 255
    115c:	96 e7       	ldi	r25, 0x76	; 118
    115e:	21 e0       	ldi	r18, 0x01	; 1
    1160:	81 50       	subi	r24, 0x01	; 1
    1162:	90 40       	sbci	r25, 0x00	; 0
    1164:	20 40       	sbci	r18, 0x00	; 0
    1166:	e1 f7       	brne	.-8      	; 0x1160 <InitializeDisplay+0x3c>
    1168:	00 c0       	rjmp	.+0      	; 0x116a <InitializeDisplay+0x46>
    116a:	00 00       	nop
    116c:	8e ea       	ldi	r24, 0xAE	; 174
    116e:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1172:	85 ed       	ldi	r24, 0xD5	; 213
    1174:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1178:	80 e8       	ldi	r24, 0x80	; 128
    117a:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    117e:	88 ea       	ldi	r24, 0xA8	; 168
    1180:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1184:	8f e3       	ldi	r24, 0x3F	; 63
    1186:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    118a:	83 ed       	ldi	r24, 0xD3	; 211
    118c:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1196:	80 e4       	ldi	r24, 0x40	; 64
    1198:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    119c:	8d e8       	ldi	r24, 0x8D	; 141
    119e:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11a2:	84 e1       	ldi	r24, 0x14	; 20
    11a4:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11a8:	81 ea       	ldi	r24, 0xA1	; 161
    11aa:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11ae:	88 ec       	ldi	r24, 0xC8	; 200
    11b0:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11b4:	8a ed       	ldi	r24, 0xDA	; 218
    11b6:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11ba:	82 e1       	ldi	r24, 0x12	; 18
    11bc:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11c0:	81 e8       	ldi	r24, 0x81	; 129
    11c2:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11c6:	8f ec       	ldi	r24, 0xCF	; 207
    11c8:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11cc:	89 ed       	ldi	r24, 0xD9	; 217
    11ce:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11d2:	81 ef       	ldi	r24, 0xF1	; 241
    11d4:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11d8:	8b ed       	ldi	r24, 0xDB	; 219
    11da:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11de:	80 e4       	ldi	r24, 0x40	; 64
    11e0:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11e4:	84 ea       	ldi	r24, 0xA4	; 164
    11e6:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11ea:	86 ea       	ldi	r24, 0xA6	; 166
    11ec:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11f0:	8f ea       	ldi	r24, 0xAF	; 175
    11f2:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    11f6:	08 95       	ret

000011f8 <SendChar>:
    11f8:	cf 93       	push	r28
    11fa:	c8 2f       	mov	r28, r24
    11fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1200:	0e 94 af 07 	call	0xf5e	; 0xf5e <I2C_Start>
    1204:	80 e4       	ldi	r24, 0x40	; 64
    1206:	0e 94 d5 07 	call	0xfaa	; 0xfaa <I2C_Write>
    120a:	8c 2f       	mov	r24, r28
    120c:	0e 94 d5 07 	call	0xfaa	; 0xfaa <I2C_Write>
    1210:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <I2C_Stop>
    1214:	cf 91       	pop	r28
    1216:	08 95       	ret

00001218 <setXY>:
    1218:	cf 93       	push	r28
    121a:	c6 2f       	mov	r28, r22
    121c:	80 55       	subi	r24, 0x50	; 80
    121e:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1222:	8c 2f       	mov	r24, r28
    1224:	88 0f       	add	r24, r24
    1226:	88 0f       	add	r24, r24
    1228:	88 0f       	add	r24, r24
    122a:	88 70       	andi	r24, 0x08	; 8
    122c:	8e 5f       	subi	r24, 0xFE	; 254
    122e:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1232:	8c 2f       	mov	r24, r28
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	96 95       	lsr	r25
    1238:	87 95       	ror	r24
    123a:	8f 70       	andi	r24, 0x0F	; 15
    123c:	80 5f       	subi	r24, 0xF0	; 240
    123e:	0e 94 82 08 	call	0x1104	; 0x1104 <ssd1306_command>
    1242:	cf 91       	pop	r28
    1244:	08 95       	ret

00001246 <clear_display>:
    1246:	cf 93       	push	r28
    1248:	df 93       	push	r29
    124a:	d0 e0       	ldi	r29, 0x00	; 0
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	8d 2f       	mov	r24, r29
    1250:	0e 94 0c 09 	call	0x1218	; 0x1218 <setXY>
    1254:	c1 e8       	ldi	r28, 0x81	; 129
    1256:	80 e0       	ldi	r24, 0x00	; 0
    1258:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <SendChar>
    125c:	c1 50       	subi	r28, 0x01	; 1
    125e:	d9 f7       	brne	.-10     	; 0x1256 <clear_display+0x10>
    1260:	df 5f       	subi	r29, 0xFF	; 255
    1262:	d8 30       	cpi	r29, 0x08	; 8
    1264:	99 f7       	brne	.-26     	; 0x124c <clear_display+0x6>
    1266:	df 91       	pop	r29
    1268:	cf 91       	pop	r28
    126a:	08 95       	ret

0000126c <printBigNumber>:
    126c:	7f 92       	push	r7
    126e:	8f 92       	push	r8
    1270:	9f 92       	push	r9
    1272:	af 92       	push	r10
    1274:	bf 92       	push	r11
    1276:	cf 92       	push	r12
    1278:	df 92       	push	r13
    127a:	ef 92       	push	r14
    127c:	ff 92       	push	r15
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	7c 01       	movw	r14, r24
    1288:	4b 01       	movw	r8, r22
    128a:	74 2e       	mov	r7, r20
    128c:	64 2f       	mov	r22, r20
    128e:	88 2d       	mov	r24, r8
    1290:	0e 94 0c 09 	call	0x1218	; 0x1218 <setXY>
    1294:	c8 ea       	ldi	r28, 0xA8	; 168
    1296:	de e0       	ldi	r29, 0x0E	; 14
    1298:	0f 2e       	mov	r0, r31
    129a:	f8 e0       	ldi	r31, 0x08	; 8
    129c:	cf 2e       	mov	r12, r31
    129e:	ff e0       	ldi	r31, 0x0F	; 15
    12a0:	df 2e       	mov	r13, r31
    12a2:	f0 2d       	mov	r31, r0
    12a4:	80 e6       	ldi	r24, 0x60	; 96
    12a6:	8e 9d       	mul	r24, r14
    12a8:	50 01       	movw	r10, r0
    12aa:	8f 9d       	mul	r24, r15
    12ac:	b0 0c       	add	r11, r0
    12ae:	11 24       	eor	r1, r1
    12b0:	00 e0       	ldi	r16, 0x00	; 0
    12b2:	10 e0       	ldi	r17, 0x00	; 0
    12b4:	80 ec       	ldi	r24, 0xC0	; 192
    12b6:	a8 1a       	sub	r10, r24
    12b8:	83 e0       	ldi	r24, 0x03	; 3
    12ba:	b8 0a       	sbc	r11, r24
    12bc:	ea e0       	ldi	r30, 0x0A	; 10
    12be:	ee 16       	cp	r14, r30
    12c0:	f1 04       	cpc	r15, r1
    12c2:	2c f0       	brlt	.+10     	; 0x12ce <printBigNumber+0x62>
    12c4:	fe 01       	movw	r30, r28
    12c6:	84 91       	lpm	r24, Z
    12c8:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <SendChar>
    12cc:	06 c0       	rjmp	.+12     	; 0x12da <printBigNumber+0x6e>
    12ce:	f5 01       	movw	r30, r10
    12d0:	ec 0f       	add	r30, r28
    12d2:	fd 1f       	adc	r31, r29
    12d4:	84 91       	lpm	r24, Z
    12d6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <SendChar>
    12da:	07 31       	cpi	r16, 0x17	; 23
    12dc:	11 05       	cpc	r17, r1
    12de:	51 f4       	brne	.+20     	; 0x12f4 <printBigNumber+0x88>
    12e0:	ff ef       	ldi	r31, 0xFF	; 255
    12e2:	8f 1a       	sub	r8, r31
    12e4:	9f 0a       	sbc	r9, r31
    12e6:	67 2d       	mov	r22, r7
    12e8:	88 2d       	mov	r24, r8
    12ea:	0e 94 0c 09 	call	0x1218	; 0x1218 <setXY>
    12ee:	00 e0       	ldi	r16, 0x00	; 0
    12f0:	10 e0       	ldi	r17, 0x00	; 0
    12f2:	02 c0       	rjmp	.+4      	; 0x12f8 <printBigNumber+0x8c>
    12f4:	0f 5f       	subi	r16, 0xFF	; 255
    12f6:	1f 4f       	sbci	r17, 0xFF	; 255
    12f8:	21 96       	adiw	r28, 0x01	; 1
    12fa:	cc 15       	cp	r28, r12
    12fc:	dd 05       	cpc	r29, r13
    12fe:	f1 f6       	brne	.-68     	; 0x12bc <printBigNumber+0x50>
    1300:	df 91       	pop	r29
    1302:	cf 91       	pop	r28
    1304:	1f 91       	pop	r17
    1306:	0f 91       	pop	r16
    1308:	ff 90       	pop	r15
    130a:	ef 90       	pop	r14
    130c:	df 90       	pop	r13
    130e:	cf 90       	pop	r12
    1310:	bf 90       	pop	r11
    1312:	af 90       	pop	r10
    1314:	9f 90       	pop	r9
    1316:	8f 90       	pop	r8
    1318:	7f 90       	pop	r7
    131a:	08 95       	ret

0000131c <printTallyNumber>:
//Metoda vysviecujuca velke Tally cisla - 42 x 64
void printTallyNumber(int camera, int X, int Y)
{
    131c:	df 92       	push	r13
    131e:	ef 92       	push	r14
    1320:	ff 92       	push	r15
    1322:	0f 93       	push	r16
    1324:	1f 93       	push	r17
    1326:	cf 93       	push	r28
    1328:	df 93       	push	r29
    132a:	d4 2e       	mov	r13, r20
    132c:	f6 2e       	mov	r15, r22
    132e:	20 e5       	ldi	r18, 0x50	; 80
    1330:	31 e0       	ldi	r19, 0x01	; 1
    1332:	ac 01       	movw	r20, r24
    1334:	42 9f       	mul	r20, r18
    1336:	c0 01       	movw	r24, r0
    1338:	43 9f       	mul	r20, r19
    133a:	90 0d       	add	r25, r0
    133c:	52 9f       	mul	r21, r18
    133e:	90 0d       	add	r25, r0
    1340:	11 24       	eor	r1, r1
    1342:	ec 01       	movw	r28, r24
    1344:	c8 59       	subi	r28, 0x98	; 152
    1346:	df 4f       	sbci	r29, 0xFF	; 255
    1348:	68 94       	set
    134a:	ee 24       	eor	r14, r14
    134c:	e3 f8       	bld	r14, 3
    134e:	e6 0e       	add	r14, r22
	for (int j = 0; j < 8; j++)
	{
		setXY(X, Y);
    1350:	6d 2d       	mov	r22, r13
    1352:	8f 2d       	mov	r24, r15
    1354:	0e 94 0c 09 	call	0x1218	; 0x1218 <setXY>
    1358:	8e 01       	movw	r16, r28
    135a:	06 5d       	subi	r16, 0xD6	; 214
    135c:	1f 4f       	sbci	r17, 0xFF	; 255
		for (int i = 0; i < wightTallyFont; i++)
		{
			SendChar(pgm_read_byte(tallyNumbers[camera] + (i + j * wightTallyFont)));
    135e:	fe 01       	movw	r30, r28
    1360:	84 91       	lpm	r24, Z
    1362:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <SendChar>
    1366:	21 96       	adiw	r28, 0x01	; 1
void printTallyNumber(int camera, int X, int Y)
{
	for (int j = 0; j < 8; j++)
	{
		setXY(X, Y);
		for (int i = 0; i < wightTallyFont; i++)
    1368:	c0 17       	cp	r28, r16
    136a:	d1 07       	cpc	r29, r17
    136c:	c1 f7       	brne	.-16     	; 0x135e <printTallyNumber+0x42>
    136e:	f3 94       	inc	r15
    1370:	e8 01       	movw	r28, r16
	
}
//Metoda vysviecujuca velke Tally cisla - 42 x 64
void printTallyNumber(int camera, int X, int Y)
{
	for (int j = 0; j < 8; j++)
    1372:	fe 10       	cpse	r15, r14
    1374:	ed cf       	rjmp	.-38     	; 0x1350 <printTallyNumber+0x34>
		{
			SendChar(pgm_read_byte(tallyNumbers[camera] + (i + j * wightTallyFont)));
		}
		X++;
	}
    1376:	df 91       	pop	r29
    1378:	cf 91       	pop	r28
    137a:	1f 91       	pop	r17
    137c:	0f 91       	pop	r16
    137e:	ff 90       	pop	r15
    1380:	ef 90       	pop	r14
    1382:	df 90       	pop	r13
    1384:	08 95       	ret

00001386 <_exit>:
    1386:	f8 94       	cli

00001388 <__stop_program>:
    1388:	ff cf       	rjmp	.-2      	; 0x1388 <__stop_program>
